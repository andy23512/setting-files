# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'mac'

# Start tmux if not already in tmux.
# zstyle ':z4h:' start-tmux command tmux -u new -A -D -t z4h

# Whether to move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:' prompt-at-bottom 'no'

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'no'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Extend PATH.
path=(~/bin $path)

# Export environment variables.
export GPG_TTY=$TTY

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin

# Define key bindings.
z4h bindkey undo Ctrl+/   Shift+Tab  # undo the last command line change
z4h bindkey redo Option+/            # redo the last undone command line change

z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'

# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} -A"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

DISABLE_UNTRACKED_FILES_DIRTY="true"

####################################### Personal Setting

### Globals

export LANG=en_US.UTF-8
export PATH="$PATH:/usr/local/sbin:$HOME/.local/bin"

### ls

alias ls='/bin/ls -G'

### cd

alias cr='cd $(git root)'
alias cf='cd $(git root)/frontend'
alias cb='cd $(git root)/backend'
alias cs='cd ~/git/space/'
alias cw='cd ~/git/website/'
alias ca='cd ~/git/accel-shooter/'
alias cm='cd ~/git/aether-mono/'
alias ci='cd ~/git/ihis/'
alias cdc='cd ~/git/dicom-ct/'
alias cv='cd ~/git/vfss/'
alias cal='cd ~/git/alnitak/'

### Git

alias g='git'
alias gs='git s'
alias gd='git d'
alias gdc='git dc'
alias gp='git push'
alias ga='git add -A'
alias gci='git ci'

### VSCode

alias c="NODE_OPTIONS= code-insiders --disable-gpu ."

function cof() {
	DIR=$(git root)/frontend
	if [ -d "$DIR" ]; then
		NODE_OPTIONS= code-insiders --disable-gpu $DIR
	else
		NODE_OPTIONS= code-insiders --disable-gpu $(git root)
	fi
}

function cob() {
	DIR=$(git root)/backend
	if [ -d "$DIR" ]; then
		NODE_OPTIONS= code-insiders --disable-gpu $DIR
	else
		NODE_OPTIONS= code-insiders --disable-gpu $(git root)
	fi
}

function coi() {
	DIR=$(git root)/image-server
	if [ -d "$DIR" ]; then
		NODE_OPTIONS= code-insiders --disable-gpu $DIR
	else
		NODE_OPTIONS= code-insiders --disable-gpu $(git root)
	fi
}

### yarn

alias y="yarn"
alias ys="yarn start"

### tmux

alias tx='tmux new -A -D -s'

### fnm
eval "$(fnm env --use-on-cd)"

### Innocent Starter

function innocent_starter {
	cd $1
	tmux new -A -d -s $2 -c $1
	tx $2
}

alias isa="accel_shooter_starter"
alias isw="innocent_starter ~/git/website w"
alias iss="innocent_starter ~/git/space s"
alias isi="innocent_starter ~/git/ihis i"
alias isd="innocent_starter ~/git/dicom-ct d"
alias ism="innocent_starter ~/git/aether-mono m"
alias isv="innocent_starter ~/git/vfss v"

### Accel Shooter

function accel_shooter_starter {
	cd ~/git/accel-shooter
	tmux new -A -d -s a -c ~/git/accel-shooter
	tmux rename-window 'acst'
	tmux send-keys 'as track' C-m
	tmux split-window
	tmux send-keys 'acst-server' C-m
	tmux split-window
	tmux send-keys 'as meetingTrack && exit' C-m
	tmux split-window
	tmux send-keys 'colima start && exit' C-m
	tx a
}

alias ach="accel-shooter check"
alias ao="accel-shooter open"
alias as="accel-shooter"
alias aw="accel-shooter work"
alias dpcp="accel-shooter dailyProgress"
alias xb="accel-shooter commit build"
alias xc="accel-shooter commit chore"
alias xd="accel-shooter commit docs"
alias xf="accel-shooter commit feat"
alias xi="accel-shooter commit ci"
alias xp="accel-shooter commit perf"
alias xr="accel-shooter commit refactor"
alias xs="accel-shooter commit style"
alias xt="accel-shooter commit test"
alias xx="accel-shooter commit fix"

export ACCEL_SHOOTER_CONFIG_FILE=~/ResilioSync/accel-shooter/.config.yml

### Console Ninja

PATH=~/.console-ninja/.bin:$PATH

### Nx

export NX_CACHE_DIRECTORY="${HOME}/.nx/cache"

### fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
